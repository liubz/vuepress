import{_ as e,c as i,o,ag as t}from"./chunks/framework.BPw0-pHp.js";const s=JSON.parse('{"title":"Electron读取多文件","description":"","frontmatter":{},"headers":[],"relativePath":"electron/Electron读取多文件.md","filePath":"electron/Electron读取多文件.md"}'),r={name:"electron/Electron读取多文件.md"};function a(n,l,u,p,c,d){return o(),i("div",null,l[0]||(l[0]=[t('<h1 id="electron读取多文件" tabindex="-1">Electron读取多文件 <a class="header-anchor" href="#electron读取多文件" aria-label="Permalink to &quot;Electron读取多文件&quot;">​</a></h1><h2 id="方案一" tabindex="-1">方案一 <a class="header-anchor" href="#方案一" aria-label="Permalink to &quot;方案一&quot;">​</a></h2><ul><li><p>安装依赖</p><ol><li>npm install clipboard-files -S</li><li>npm install electron-rebuild -D</li></ol></li><li><p>(使用clipboard-files库)[<a href="https://github.com/alex8088/clipboard-files" target="_blank" rel="noreferrer">https://github.com/alex8088/clipboard-files</a>]</p></li><li><p>(使用 electron-rebuild 编译 clipboard-files)[<a href="https://github.com/electron/rebuild" target="_blank" rel="noreferrer">https://github.com/electron/rebuild</a>]</p><ol><li>新增脚本 &quot;rebuild&quot;: &quot;electron-rebuild -f -w clipboard-files&quot;</li><li>指定编译成window 32位文件 &quot;rebuild&quot;: &quot;electron-rebuild -f -w -a=--ia32 clipboard-files&quot;</li><li>执行脚本 npm run rebuild</li></ol></li><li><p>打包适配可将 rebuild 命令打包脚本中</p><ol><li>打包64位：</li><li>配置编译脚本 &quot;rebuild:64&quot;: &quot;electron-rebuild -f -w -a=--x64 clipboard-files&quot;</li><li>配置打包脚本 &quot;build:win:64&quot;: &quot; npm run rebuild:64 &amp;&amp; npm run build &amp;&amp; electron-builder --win&quot;</li><li>打包32位：</li><li>配置编译脚本 &quot;rebuild:32&quot;: &quot;electron-rebuild -f -w -a=--ia32 clipboard-files&quot;</li><li>配置打包脚本 &quot;build:win:32&quot;: &quot; npm run rebuild:64 &amp;&amp; npm run build &amp;&amp; electron-builder --win&quot;</li></ol></li></ul><h2 id="方案二" tabindex="-1">方案二 <a class="header-anchor" href="#方案二" aria-label="Permalink to &quot;方案二&quot;">​</a></h2><ol><li><p>使用 clipboard-files 、 electron-rebuild 提交编译原生模块生成各操作系统的.node模块</p></li><li><p>使用 pnpm patch 直接修改 node_modules中的clipboard-files模块 根据运行时的环境(系统环境、Electron版本)选择不同的.node模块</p></li></ol><ul><li><p>优点：</p><ol><li>只需编译一次，无需每次下载或打包都需要编译</li><li>避免不同设备上的环境不同，导致编译失败</li></ol></li><li><p>缺点：</p><ol><li>升级Electron版本需要重新编译，并使用 pnpm patch 重新打补丁</li></ol></li></ul>',6)]))}const m=e(r,[["render",a]]);export{s as __pageData,m as default};

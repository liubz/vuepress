import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.BPw0-pHp.js";const p=JSON.parse('{"title":"MongoDB","description":"","frontmatter":{},"headers":[],"relativePath":"web/MongoDB.md","filePath":"web/MongoDB.md"}'),l={name:"web/MongoDB.md"};function n(o,i,h,d,r,u){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="mongodb" tabindex="-1">MongoDB <a class="header-anchor" href="#mongodb" aria-label="Permalink to &quot;MongoDB&quot;">​</a></h1><h2 id="mongodb-数据库创建、删除、表-集合-创建、删除数据的增、删、改、查" tabindex="-1">MongoDB 数据库创建、删除、表（集合），创建、删除数据的增、删、改、查 <a class="header-anchor" href="#mongodb-数据库创建、删除、表-集合-创建、删除数据的增、删、改、查" aria-label="Permalink to &quot;MongoDB 数据库创建、删除、表（集合），创建、删除数据的增、删、改、查&quot;">​</a></h2><h3 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h3><ul><li>使用数据库、创建数据库： use learn(数据库名称)</li><li>查看数据库: show dbs</li><li>插入数据 db.user.insert(&quot;name&quot;: &quot;测试&quot;, &quot;age&quot;: &quot;22&quot;}) user: 集合名称</li><li>查看数据库的集合： show collections</li><li>删除集合 db.COLLECTION_NAME.drop(): db.use.drop()</li><li>删除数据库 db.dropDatabase()</li></ul><h3 id="查找数据" tabindex="-1">查找数据 <a class="header-anchor" href="#查找数据" aria-label="Permalink to &quot;查找数据&quot;">​</a></h3><ul><li>db.user.find({&quot;name&quot;: &quot;测试&quot;}) 找到名字叫测试的数据</li><li>db.user.find({&quot;age&quot;: {$lt: 22} }) 查找age小于22的数据</li><li>db.user.find({&quot;age&quot;: {$lte: 22} }) 查找age小于等于22的数据</li><li>db.user.find({&quot;age&quot;: {$gt: 22} }) 查找age大于22的数据</li><li>db.user.find({&quot;age&quot;: {$gte: 22} }) 查找age大于等于22的数据</li><li>db.user.find({&quot;age&quot;: {$gte: 22, $lte: 60} }) 查找age大于等于22小于等于60的数据</li><li>db.user.find({&quot;name&quot;: /mongo/}) 查找name包含mongo的数据</li><li>db.user.find({&quot;name&quot;: /^mongo/}) 查找name以mongo开头的数据</li><li>db.user.find({&quot;name&quot;: /mongo$/}) 查找name以mongo结尾的数据</li><li>db.user.find().sort({age: 1}) 升序查询</li><li>db.user.find().sort({age: -1}) 降序查询</li><li>db.user.find().limt(5) 查询前5条数据</li><li>db.user.find().skip(5) 查询前5条以后数据</li><li>db.user.count() 查询一共有几条数据</li></ul><h3 id="插入数据" tabindex="-1">插入数据 <a class="header-anchor" href="#插入数据" aria-label="Permalink to &quot;插入数据&quot;">​</a></h3><ul><li>循环插入数据</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db.user.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zhangsan&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: i})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h3 id="索引" tabindex="-1">索引 <a class="header-anchor" href="#索引" aria-label="Permalink to &quot;索引&quot;">​</a></h3><ul><li>创建索引 db.user.ensureIndex({&quot;username&quot;: 1})</li><li>复合索引 db.user.ensureIndex({&quot;username&quot;: 1, &quot;age&quot;: -1})</li><li>获取当前集合的索引 db.user.getIndexes()</li><li>删除索引 db.user.dropIndex({&quot;username&quot;: 1})</li><li>回去查询的执行时间 db.tablename.find().explain(&quot;executionStats&quot;)</li></ul>`,11)]))}const g=s(l,[["render",n]]);export{p as __pageData,g as default};

import{_ as s,c as a,o as n,ag as l}from"./chunks/framework.BPw0-pHp.js";const g=JSON.parse('{"title":"前端工程化","description":"","frontmatter":{},"headers":[],"relativePath":"web/前端工程化.md","filePath":"web/前端工程化.md"}'),e={name:"web/前端工程化.md"};function t(h,i,p,r,k,d){return n(),a("div",null,i[0]||(i[0]=[l(`<h1 id="前端工程化" tabindex="-1">前端工程化 <a class="header-anchor" href="#前端工程化" aria-label="Permalink to &quot;前端工程化&quot;">​</a></h1><p><a href="https://juejin.cn/post/6892003555818143752#heading-20" target="_blank" rel="noreferrer">https://juejin.cn/post/6892003555818143752#heading-20</a></p><ul><li><a href="#技术选型">技术选型</a></li><li><a href="#统一规范">统一规范</a></li><li><a href="#测试">测试</a></li><li><a href="#部署">部署</a></li><li><a href="#监控">监控</a></li><li><a href="#性能优化">性能优化</a></li><li><a href="#重构">重构</a></li></ul><h2 id="技术选型" tabindex="-1">技术选型 <a class="header-anchor" href="#技术选型" aria-label="Permalink to &quot;技术选型&quot;">​</a></h2><ul><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><h2 id="统一规范" tabindex="-1">统一规范 <a class="header-anchor" href="#统一规范" aria-label="Permalink to &quot;统一规范&quot;">​</a></h2><ul><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li></ul><h2 id="监控" tabindex="-1">监控 <a class="header-anchor" href="#监控" aria-label="Permalink to &quot;监控&quot;">​</a></h2><p>监控，又分性能监控和错误监控，它的作用是预警和追踪定位问题。</p><h3 id="性能监控" tabindex="-1">性能监控 <a class="header-anchor" href="#性能监控" aria-label="Permalink to &quot;性能监控&quot;">​</a></h3><p>性能监控一般利用 window.performance 来进行数据采集。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Performance 接口可以获取到当前页面中与性能相关的信息，它是 High Resolution Time API 的一部分，同时也融合了 Performance Timeline API、Navigation</span></span></code></pre></div><p>这个 API 的属性 timing，包含了页面加载各个阶段的起始及结束时间。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重定向耗时</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: timing.redirectEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.redirectStart,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// DOM 渲染耗时</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: timing.domComplete </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.domLoading,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 页面加载耗时</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: timing.loadEventEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.navigationStart,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 页面卸载耗时</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: timing.unloadEventEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.unloadEventStart,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 请求耗时</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: timing.responseEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.requestStart,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取性能信息时当前时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span></code></pre></div>`,14)]))}const E=s(e,[["render",t]]);export{g as __pageData,E as default};
